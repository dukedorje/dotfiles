# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES

export HOMEBREW_NO_ENV_HINTS=1

export EDITOR_CMD="/usr/local/bin/cursor"
export EDITOR="$EDITOR_CMD -w"
export VISUAL="$EDITOR_CMD -w"

# Stash your environment variables in ~/.env. This means they'll stay out
# of your main repository, but you'll have access to them in your scripts.
if [[ -a ~/.env ]]; then
  source ~/.env
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/zsh/lib/*.zsh $DOTFILES/**/*.zsh ${/opt/homebrew/share/zsh/site-functions/*:""})

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

antigen apply # Apply Antigen configuration

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit && compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

############### INDIVIDUAL PACKAGE SETUP ##################
# (This could mostly be moved to individual files)

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
#autoload -U up-line-or-beginning-search
#autoload -U down-line-or-beginning-search
#zle -N up-line-or-beginning-search
#zle -N down-line-or-beginning-search
#bindkey "^[[A" up-line-or-beginning-search # Up
#bindkey "^[[B" down-line-or-beginning-search # Down


# export NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1
# if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
#   source '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
# fi

# OPS config - ELF microkernel compilation
# if [ -d "$HOME/.ops" ]; then
#   export OPS_DIR="$HOME/.ops"
#   export PATH="$PATH:$HOME/.ops/bin"
# fi

# Vim mode
# bindkey -v
export KEYTIMEOUT=1

# To customize prompt, run `p10k configure` or edit ~/.dotfiles/zsh/lib/p10k.zsh.
[[ ! -f ~/.dotfiles/zsh/p10k.zsh ]] || source ~/.dotfiles/zsh/p10k.zsh

export PNPM_HOME="$HOME/Library/pnpm"
export PATH="$PNPM_HOME:$PATH:${HOME}/.fluvio/bin:${HOME}/.foundry/bin:${HOME}/.local/bin"


if (( $+commands[rbenv] )); then
  eval "$(rbenv init - zsh)"
fi

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

lfcd () {
    # `command` is needed in case `lfcd` is aliased to `lf`
    cd "$(command lf -print-last-dir "$@")"
}
bindkey -s '^o' 'lfcd\n' # Ctrl+o

if [ -d "$HOME/.local/share/solana/install/active_release/bin" ]; then
  export PATH="$PATH:$HOME/.local/share/solana/install/active_release/bin"
fi

if [ -d "$HOME/.maestro" ]; then
  export PATH=$PATH:$HOME/.maestro/bin
fi

# Android development
# export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
export JAVA_HOME=/opt/homebrew/opt/openjdk
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools

if [ -d "$HOME/.config/broot/launcher/bash" ]; then
  source $HOME/.config/broot/launcher/bash/br
fi

if (( $+commands[go] )) && [ -d "$(go env GOPATH)" ]; then
  export PATH="$PATH:$(go env GOPATH)/bin"
fi
